# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: immich-postgres
spec:
  # todo: wtf is wrong with talos2?
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/hostname
                operator: NotIn
                values: ["talos2"]
  instances: 3
  # immich only officially supports PG 14,15,16 and vectorchord >=0.2.0, <0.4.0
  # todo: figure out how to get renovate to track this
  imageName: ghcr.io/tensorchord/cloudnative-vectorchord:16-0.3.0@sha256:69c827b85380454b46260219a93c9fd13942453200d1d07f856a17d7af0df8b2

  postgresql:
    shared_preload_libraries:
      - "vchord.so"

  storage:
    size: 8Gi
    storageClass: local-hostpath

  monitoring:
    disableDefaultQueries: false
    enablePodMonitor: true

  managed:
    roles:
      - name: immich
        ensure: present
        connectionLimit: -1
        superuser: true
        login: true

  bootstrap:
    recovery:
      source: clusterBackup
      database: immich
      owner: immich

    #   source: clusterBackup
    #   recoveryTarget:
    #     targetTime: "2025-05-27 23:07:39.0000+00"
    # initdb:
    #   database: immich
    #   owner: immich
    #   postInitSQL:
    #     # Immich expects its user to have superuser privileges
    #     # https://immich.app/docs/administration/postgres-standalone/#with-superuser-permission
    #     - ALTER USER immich WITH SUPERUSER;
    #     - ALTER SYSTEM SET search_path TO "$user", public, vectors;
    #     - CREATE EXTENSION IF NOT EXISTS "vectors";

  backup:
    barmanObjectStore: &backupConfig
      serverName: immich-postgres-v4
      destinationPath: "s3://potatobread-homelab-backup/cnpg/immich"
      endpointURL: https://s3.us-west-000.backblazeb2.com
      s3Credentials:
        accessKeyId:
          name: cnpg-immich-backup
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: cnpg-immich-backup
          key: AWS_SECRET_ACCESS_KEY
      wal:
        compression: bzip2
      data:
        compression: bzip2

  externalClusters:
    - name: clusterBackup
      barmanObjectStore:
        <<: *backupConfig
        serverName: immich-postgres-v3
